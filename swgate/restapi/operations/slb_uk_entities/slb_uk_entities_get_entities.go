// Code generated by go-swagger; DO NOT EDIT.

package slb_uk_entities

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the generate command

import (
	"net/http"

	"github.com/go-openapi/runtime/middleware"
)

// SlbUkEntitiesGetEntitiesHandlerFunc turns a function with the right signature into a slb uk entities get entities handler
type SlbUkEntitiesGetEntitiesHandlerFunc func(SlbUkEntitiesGetEntitiesParams) middleware.Responder

// Handle executing the request and returning a response
func (fn SlbUkEntitiesGetEntitiesHandlerFunc) Handle(params SlbUkEntitiesGetEntitiesParams) middleware.Responder {
	return fn(params)
}

// SlbUkEntitiesGetEntitiesHandler interface for that can handle valid slb uk entities get entities params
type SlbUkEntitiesGetEntitiesHandler interface {
	Handle(SlbUkEntitiesGetEntitiesParams) middleware.Responder
}

// NewSlbUkEntitiesGetEntities creates a new http.Handler for the slb uk entities get entities operation
func NewSlbUkEntitiesGetEntities(ctx *middleware.Context, handler SlbUkEntitiesGetEntitiesHandler) *SlbUkEntitiesGetEntities {
	return &SlbUkEntitiesGetEntities{Context: ctx, Handler: handler}
}

/* SlbUkEntitiesGetEntities swagger:route GET /entities SlbUkEntities slbUkEntitiesGetEntities

SlbUkEntitiesGetEntities slb uk entities get entities API

*/
type SlbUkEntitiesGetEntities struct {
	Context *middleware.Context
	Handler SlbUkEntitiesGetEntitiesHandler
}

func (o *SlbUkEntitiesGetEntities) ServeHTTP(rw http.ResponseWriter, r *http.Request) {
	route, rCtx, _ := o.Context.RouteInfo(r)
	if rCtx != nil {
		r = rCtx
	}
	var Params = NewSlbUkEntitiesGetEntitiesParams()
	if err := o.Context.BindValidRequest(r, route, &Params); err != nil { // bind params
		o.Context.Respond(rw, r, route.Produces, route, err)
		return
	}

	res := o.Handler.Handle(Params) // actually handle the request
	o.Context.Respond(rw, r, route.Produces, route, res)

}
